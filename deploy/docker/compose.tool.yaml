# # 安装教程：
#   # 上传文件
#     docker部署文件：compose.tool.yaml
#     nginx配置文件：nginx.conf和项目名.conf。注意IP，域名和ssl文件名需修改

#   # 服务器执行以下命令
#     # nginx需要
#       mkdir -p /server/tool/nginx/1.27.5/config/web
#       mv /server/app/项目名/deploy/nginx/nginx.conf /server/tool/nginx/1.27.5/config/nginx.conf
#       mv /server/app/项目名/deploy/nginx/项目名.conf /server/tool/nginx/1.27.5/config/web/项目名.conf
#     # mysql需要
#       mkdir -p /server/tool/mysql/9.3.0/data && chmod -R 777 /server/tool/mysql/9.3.0/data
#     # postgresql需要
#       mkdir -p /server/tool/postgresql/17.5.0 && chmod -R 777 /server/tool/postgresql/17.5.0
#     # scylladb需要（注意：数据中心名称 和 物理机标识）
#       mkdir -p /server/tool/scylladb/6.2.3/data /server/tool/scylladb/6.2.3/conf
#       chmod -R 777 /server/tool/scylladb/6.2.3/data
#       echo -e "dc=DC_Xx\nrack=Xx_1" > /server/tool/scylladb/6.2.3/conf/cassandra-rackdc.properties
#     # kafka需要
#       mkdir -p /server/tool/kafka/4.0.0 && chmod -R 777 /server/tool/kafka/4.0.0
#       vi /etc/hosts追加: 服务器IP 主机名(hostname查看)
#     # 部署
#       docker compose -f /server/app/项目名/deploy/docker/compose.tool.yaml up -d
#     # redis任意容器执行以下命令
#       docker exec -it redis-node redis-cli --cluster create -a 密码 服务器IP:6379 服务器IP:6379 服务器IP:6379 --cluster-replicas 0
#     # 修改scylladb默认密码
#       docker exec -it scylladb-node bash
#       cqlsh -u cassandra -p cassandra
#       ALTER USER 'cassandra' WITH PASSWORD '密码';

services:
  nginx-alone:
    image: nginx:1.27.5
    container_name: nginx-alone
    restart: unless-stopped
    network_mode: host
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /server/tool/nginx/1.27.5/config/nginx.conf:/etc/nginx/nginx.conf
      - /server/tool/nginx/1.27.5/config/web:/etc/nginx/web
      - /server/app:/server/app

  # mysql-alone:
  #   image: mysql:9.3.0
  #   container_name: mysql-alone
  #   restart: unless-stopped
  #   network_mode: host
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - /server/tool/mysql/9.3.0/data:/var/lib/mysql
  #   environment:
  #     MYSQL_ROOT_PASSWORD: 密码
  #     MYSQL_DATABASE: 库名
  #     MYSQL_USER: 账号
  #     MYSQL_PASSWORD: 密码

  mysql-node:
    image: bitnami/mysql:9.3.0
    container_name: mysql-node
    restart: unless-stopped
    network_mode: host
    volumes:
      - /etc/localtime:/etc/localtime:ro
      # - /server/tool/mysql/9.3.0/conf/my.cnf:/opt/bitnami/mysql/conf/my.cnf
      - /server/tool/mysql/9.3.0/data:/bitnami/mysql/data # 宿主机需先创建目录，并赋予写入权限：mkdir -p /server/tool/mysql/9.3.0/data && chmod -R 777 /server/tool/mysql/9.3.0/data
    environment:
      MYSQL_PORT_NUMBER: 3306
      MYSQL_ROOT_USER: 账号
      MYSQL_ROOT_PASSWORD: 密码
      MYSQL_DATABASE: 库名
      MYSQL_USER: 账号
      MYSQL_PASSWORD: 密码
      MYSQL_REPLICATION_MODE: master或slave
      MYSQL_REPLICATION_USER: 复制用户
      MYSQL_REPLICATION_PASSWORD: 复制密码
      MYSQL_MASTER_HOST: 主库IP（从库设置）
      MYSQL_MASTER_PORT_NUMBER: 主库端口（从库设置）
      MYSQL_MASTER_ROOT_USER: 主库账号（从库设置）
      MYSQL_MASTER_ROOT_PASSWORD: 主库密码（从库设置）

  # postgresql-alone:
  #   image: postgres:17.4
  #   container_name: postgresql-alone
  #   restart: unless-stopped
  #   network_mode: host
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - /server/tool/postgresql/17.4/data:/var/lib/postgresql/data
  #   environment:
  #     POSTGRES_USER: 账号
  #     POSTGRES_PASSWORD: 密码
  #     MYSQL_DATABASE: 库名

  postgresql-node:
    image: bitnami/postgresql:17.5.0
    container_name: postgresql-node
    restart: unless-stopped
    network_mode: host
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /server/tool/postgresql/17.5.0:/bitnami/postgresql # 宿主机需先创建目录，并赋予写入权限：mkdir -p /server/tool/postgresql/17.5.0 && chmod -R 777 /server/tool/postgresql/17.5.0
    environment:
      POSTGRESQL_PORT_NUMBER: 5432
      POSTGRESQL_USERNAME: 账号
      POSTGRESQL_PASSWORD: 密码
      POSTGRESQL_DATABASE: 库名
      POSTGRESQL_REPLICATION_MODE: master或slave
      POSTGRESQL_REPLICATION_USER: 复制用户
      POSTGRESQL_REPLICATION_PASSWORD: 复制密码
      POSTGRESQL_NUM_SYNCHRONOUS_REPLICAS: 0（同步复制副本数量，需从库确认主库才提交事务）
      POSTGRESQL_SYNCHRONOUS_COMMIT_MODE: on或remote_write或remote_apply（越后面越安全） 
      POSTGRESQL_MASTER_HOST: 主库IP（从库设置）
      POSTGRESQL_MASTER_PORT: 主库端口（从库设置）

  redis-alone:
    image: redis:8.0.1
    container_name: redis-alone
    restart: unless-stopped
    network_mode: host
    command: ["redis-server", "--requirepass", "密码"] # command: ["redis-server", "--protected-mode", "no", "--bind", "0.0.0.0", "--port", "6379", "--cluster-enabled", "yes", "--cluster-config-file", "/data/nodes.conf", "--cluster-node-timeout", "5000", "--appendonly", "yes", "--requirepass", "密码", "--masterauth", "密码"] # 任意容器执行以下命令启动集群：docker exec -it redis-node redis-cli --cluster create -a 密码 节点IP:6379 节点IP:6379 节点IP:6379 --cluster-replicas 0
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /server/tool/redis/8.0.1/data:/data

  # scylladb-node:
  #   image: bitnami/scylladb:6.2.3
  #   container_name: scylladb-node
  #   restart: unless-stopped
  #   network_mode: host
  #   deploy:
  #     resources:
  #       limits:
  #         memory: 8g
  #   ulimits:
  #     memlock: -1
  #     nofile:
  #       soft: 100000
  #       hard: 100000
  #   command: ["/opt/bitnami/scripts/scylladb/run.sh", "--memory=6G", "--reserve-memory=1G", "--smp", "4"]
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - /server/tool/scylladb/6.2.3/conf:/conf # 宿主机需先创建配置目录：mkdir -p /server/tool/scylladb/6.2.3/conf
  #     - /server/tool/scylladb/6.2.3/data:/bitnami/scylladb/data # 宿主机需先创建数据目录，并赋予写入权限：mkdir -p /server/tool/scylladb/6.2.3/data && chmod -R 777 /server/tool/scylladb/6.2.3/data
  #   environment:
  #     # SCYLLADB_DEVELOPER_MODE: "no"
  #     # SCYLLADB_CQL_PORT_NUMBER: 9042
  #     SCYLLADB_CLUSTER_NAME: 集群名称
  #     SCYLLADB_ENDPOINT_SNITCH: GossipingPropertyFileSnitch
  #     SCYLLADB_SEEDS: 服务器IP,服务器IP,服务器IP # 注意修改。集群第一个主节点启动时只能设置自身IP
  #     SCYLLADB_HOST: 服务器IP # 注意修改

  # kafka-node:
  #   image: bitnami/kafka:4.0.0
  #   container_name: kafka-node
  #   restart: unless-stopped
  #   network_mode: host
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - /server/tool/kafka/4.0.0:/bitnami/kafka # 宿主机需先创建数据目录，并赋予写入权限：mkdir -p /server/tool/kafka/4.0.0 && chmod -R 777 /server/tool/kafka/4.0.0
  #   environment:
  #     KAFKA_CLUSTER_ID: 集群标识
  #     KAFKA_CFG_NODE_ID: 1 # 注意修改
  #     KAFKA_CFG_PROCESS_ROLES: controller,broker
  #     KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@服务器IP:9093,2@服务器IP:9093,3@服务器IP:9093 # 注意修改
  #     KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:SASL_PLAINTEXT,SASL_PLAINTEXT:SASL_PLAINTEXT,EXTERNAL:SASL_PLAINTEXT
  #     KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
  #     KAFKA_CFG_INTER_BROKER_LISTENER_NAME: SASL_PLAINTEXT
  #     KAFKA_CLIENT_LISTENER_NAME: SASL_PLAINTEXT
  #     KAFKA_CFG_LISTENERS: CONTROLLER://:9093,SASL_PLAINTEXT://:9092,EXTERNAL://:30003
  #     KAFKA_CFG_ADVERTISED_LISTENERS: SASL_PLAINTEXT://服务器IP:9092,EXTERNAL://服务器IP(增加额外端口时使用):30003 # 注意修改
  #     KAFKA_CFG_SASL_MECHANISM_CONTROLLER_PROTOCOL: PLAIN
  #     KAFKA_CFG_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
  #     KAFKA_INTER_BROKER_USER: 账号_broker
  #     KAFKA_INTER_BROKER_PASSWORD: 密码
  #     KAFKA_CONTROLLER_USER: 账号_controller
  #     KAFKA_CONTROLLER_PASSWORD: 密码
  #     KAFKA_CLIENT_USERS: 账号
  #     KAFKA_CLIENT_PASSWORDS: 密码