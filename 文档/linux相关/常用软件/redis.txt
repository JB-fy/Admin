依赖：yum install gcc gcc-c++ make
	1、创建安装目录
		mkdir -p /server/tool/redis-7.0.11
	2、解压php安装
		tar -xvf redis-7.0.11.tar.gz
		进入解压目录编译
		//报这个错误时，jemalloc/jemalloc.h：没有那个文件或目录。使用make MALLOC=libc编译
		make
		编译完进入src目录安装
		make install PREFIX=/server/tool/redis-7.0.11
	3、拷贝配置文件
        mkdir -p /server/tool/redis-7.0.11/etc
		cp /server/redis-7.0.11/redis.conf /server/tool/redis-7.0.11/etc
	4、启用redis
		/server/tool/redis-7.0.11/bin/redis-server /server/tool/redis-7.0.11/etc/redis.conf
	5、修改redis配置文件
		vi /server/tool/redis-7.0.11/etc/redis.conf
			requirepass	//设置密码
			port 6379	//设置端口
			daemonize yes 	//设置为允许redis后台运行
			bind 127.0.0.1	//限制IP访问
			protected-mode no	//设置远程访问
			logfile /server/tool/redis-7.0.11/redis.log	//指定日志文件存储路径。默认是空字符串，输出到终端或控制台中
	6、编辑自启动文件
		vi /etc/systemd/system/redis-7.0.11.service
[Unit]
Description=redis
After=network.target
[Service]
Type=forking
ExecStart=/server/tool/redis-7.0.11/bin/redis-server /server/tool/redis-7.0.11/etc/redis.conf
ExecReload=/server/tool/redis-7.0.11/bin/redis-server -s reload
ExecStop=/server/tool/redis-7.0.11/bin/redis-server -s stop
PrivateTmp=true
[Install]
WantedBy=multi-user.target
    7、设置自启动
        systemctl enable redis-7.0.11
	8、客户端连接测试
		/server/tool/redis-7.0.11/bin/redis-cli
	9、如果是单独一台redis服务器，需要开放redis设置的端口号（默认6379）
		firewall-cmd --zone=public --add-port=6379/tcp --permanent



如需设置集群，按以下步骤设置（注意：设置集群至少需要3个redis）
	启动集群需要设置系统允许进程分配的内存总量超过实际可用的物理内存
		vi /etc/sysctl.conf
			//添加或修改以下行
			vm.overcommit_memory = 1
	修改各个redis配置文件
		vi /server/tool/redis-7.0.11/etc/redis.conf
			cluster-enabled yes
			cluster-config-file /server/tool/redis-7.0.11/etc/nodes.conf
			cluster-node-timeout 15000
	启动集群：任意一个redis运行以下命令（必须先启动每个redis服务）
		//--cluster-replicas用于设置主节点有多少个从节点。因redis集群必须满足3个节点，故必须节点数操作3个才可设置
		/server/tool/redis-7.0.11/bin/redis-cli --cluster create 0.0.0.0:6380 0.0.0.0:6381 0.0.0.0:6382 --yes [--cluster-replicas 1]
			报错处理：
				[ERR] Node 0.0.0.0:6382 is not empty. Either the node already knows other nodes (check with CLUSTER NODES) or contains some key in database 0.
					清除节点的数据：/server/tool/redis-7.0.11/bin/redis-cli -h 0.0.0.0 -p 6381 FLUSHALL
					重置节点：/server/tool/redis-7.0.11/bin/redis-cli -h 0.0.0.0 -p 6381 CLUSTER RESET
					检查节点状态：/server/tool/redis-7.0.11/bin/redis-cli -h 0.0.0.0 -p 6381 CLUSTER NODES
	验证redis状态
		/server/tool/redis-7.0.11/bin/redis-cli --cluster check 0.0.0.0:6380
	关闭节点
		/server/tool/redis-7.0.11/bin/redis-cli -h 0.0.0.0 -p 6380 shutdown
	设置集群自启动
		新增sh执行文件
			vi /server/tool/redis-cluster.sh
#!/bin/bash

case "$1" in
    start)
        # 清除和重置节点 1
        /server/tool/redis-7.4-6380/bin/redis-cli -h 0.0.0.0 -p 6380 FLUSHALL
        /server/tool/redis-7.4-6380/bin/redis-cli -h 0.0.0.0 -p 6380 CLUSTER RESET

        # 启动节点 1
        /server/tool/redis-7.4-6380/bin/redis-server /server/tool/redis-7.4-6380/etc/redis.conf

        # 清除和重置节点 2
        /server/tool/redis-7.4-6381/bin/redis-cli -h 0.0.0.0 -p 6381 FLUSHALL
        /server/tool/redis-7.4-6381/bin/redis-cli -h 0.0.0.0 -p 6381 CLUSTER RESET

        # 启动节点 2
        /server/tool/redis-7.4-6381/bin/redis-server /server/tool/redis-7.4-6381/etc/redis.conf

        # 清除和重置节点 3
        /server/tool/redis-7.4-6382/bin/redis-cli -h 0.0.0.0 -p 6382 FLUSHALL
        /server/tool/redis-7.4-6382/bin/redis-cli -h 0.0.0.0 -p 6382 CLUSTER RESET

        # 启动节点 3
        /server/tool/redis-7.4-6382/bin/redis-server /server/tool/redis-7.4-6382/etc/redis.conf

        # 创建 Redis 集群
        echo "yes" | /server/tool/redis-7.4-6380/bin/redis-cli --cluster create 0.0.0.0:6380 0.0.0.0:6381 0.0.0.0:6382
        ;;
    stop)
        # 关闭节点 1
        /server/tool/redis-7.4-6380/bin/redis-cli -h 0.0.0.0 -p 6380 shutdown

        # 关闭节点 2
        /server/tool/redis-7.4-6381/bin/redis-cli -h 0.0.0.0 -p 6381 shutdown

        # 关闭节点 3
        /server/tool/redis-7.4-6382/bin/redis-cli -h 0.0.0.0 -p 6382 shutdown
        ;;
    *)
        echo "Usage: $0 {start|stop}"
        exit 1
        ;;
esac

		赋予执行权限
			chmod +x /server/tool/redis-cluster.sh
		编辑自启动文件
			vi /etc/systemd/system/redis-cluster.service
[Unit]
Description=redis-cluster
After=network.target
[Service]
Type=forking
ExecStart=/server/tool/redis-cluster.sh start
ExecStop=/server/tool/redis-cluster.sh stop
Restart=always
PrivateTmp=true
[Install]
WantedBy=multi-user.target
		设置自启动
			systemctl enable redis-cluster