依赖：yum install gcc gcc-c++ make
	1、创建安装目录
		mkdir -p /server/tool/redis-7.0.11
	2、解压php安装
		tar -xvf redis-7.0.11.tar.gz
		进入解压目录编译
		# 报这个错误时，jemalloc/jemalloc.h：没有那个文件或目录。使用make MALLOC=libc编译
		make
		编译完进入src目录安装
		make install PREFIX=/server/tool/redis-7.0.11
	3、拷贝配置文件
        mkdir -p /server/tool/redis-7.0.11/etc /server/tool/redis-7.0.11/run /server/tool/redis-7.0.11/data_6379
		cp /server/redis-7.0.11/redis.conf /server/tool/redis-7.0.11/etc
	4、启用redis
		# --daemonize no临时设置为前台模式（调试时使用，才能在终端查看启动信息）
		/server/tool/redis-7.0.11/bin/redis-server /server/tool/redis-7.0.11/etc/redis.conf [--daemonize no]
	5、修改redis配置文件
		vi /server/tool/redis-7.0.11/etc/redis.conf
			requirepass	//设置密码
			port 6379	//设置端口
			daemonize yes 	//设置为允许redis后台运行
			bind 127.0.0.1	//限制IP访问
			protected-mode no	//设置远程访问
			logfile ""	//指定日志文件存储路径。默认是空字符串，输出到终端（前置条件：daemonize no）
            pidfile /server/tool/redis-7.0.11/run/redis_6379.pid //存储路径。默认/var/run/redis_6379.pid
            dir /server/tool/redis-7.0.11/data_6379  //指定数据目录，用于存储持久化文件（如RDB和AOF文件）。默认./
	6、编辑自启动文件
		vi /etc/systemd/system/redis-7.0.11.service
[Unit]
Description=redis
After=network.target
[Service]
Type=forking
ExecStart=/server/tool/redis-7.0.11/bin/redis-server /server/tool/redis-7.0.11/etc/redis.conf
ExecReload=/server/tool/redis-7.0.11/bin/redis-server -s reload
ExecStop=/server/tool/redis-7.0.11/bin/redis-server -s stop
PrivateTmp=true
[Install]
WantedBy=multi-user.target
    7、设置自启动
        systemctl enable redis-7.0.11
	8、客户端连接测试
		/server/tool/redis-7.0.11/bin/redis-cli
	9、如果是单独一台redis服务器，需要开放redis设置的端口号（默认6379）
		firewall-cmd --zone=public --add-port=6379/tcp --permanent



如需设置集群，按以下步骤设置（注意：设置集群至少需要3个redis）
	1、启动集群需要设置系统允许进程分配的内存总量超过实际可用的物理内存
		vi /etc/sysctl.conf
			# 添加或修改以下行
			vm.overcommit_memory = 1
	2、修改各个redis配置文件（可直接拷贝多个配置文件做启动，但注意创建dir配置目录）
		vi /server/tool/redis-7.0.11/etc/redis_6380.conf
			cluster-enabled yes
			cluster-config-file /server/tool/redis-7.0.11/etc/nodes_6380.conf
			cluster-node-timeout 15000
			port 6380
            pidfile /server/tool/redis-7.0.11/run/redis_6380.pid
            dir /server/tool/redis-7.0.11/data_6380
	3、常用命令
		启动节点：/server/tool/redis-7.0.11/bin/redis-server /server/tool/redis-7.0.11/etc/redis_6380.conf [--daemonize no]
		关闭节点：/server/tool/redis-7.0.11/bin/redis-cli -h 0.0.0.0 -p 6380 shutdown
		验证节点：/server/tool/redis-7.0.11/bin/redis-cli --cluster check 0.0.0.0:6380
		清除节点数据：/server/tool/redis-7.0.11/bin/redis-cli -h 0.0.0.0 -p 6380 FLUSHALL
		重置节点：/server/tool/redis-7.0.11/bin/redis-cli -h 0.0.0.0 -p 6380 CLUSTER RESET
		集群信息：/server/tool/redis-7.0.11/bin/redis-cli cluster info
		节点列表：/server/tool/redis-7.0.11/bin/redis-cli cluster nodes
	4、启动集群
		启动各个节点
			/server/tool/redis-7.0.11/bin/redis-server /server/tool/redis-7.0.11/etc/redis_6380.conf [--daemonize no]
		任意一个节点运行以下命令启动集群（必须满足3个主节点才能启动）
			# --cluster-replicas用于设置主节点有多少个从节点。设置时，节点数必须满足：3 * (1 + cluster-replicas)
			/server/tool/redis-7.0.11/bin/redis-cli --cluster create 0.0.0.0:6380 0.0.0.0:6381 0.0.0.0:6382 [--cluster-replicas 1]
	5、设置自启动
		新增命令执行文件
			vi /server/tool/redis-7.0.11/bin/redis-cluster.sh
#!/bin/bash

# 添加调试信息
# set -e  # 如果任何命令失败，立即退出脚本
set -x  # 打印执行的命令

case "$1" in
    start)
        # 启动节点
        /server/tool/redis-7.0.11/bin/redis-server /server/tool/redis-7.0.11/etc/redis_6380.conf
        /server/tool/redis-7.0.11/bin/redis-server /server/tool/redis-7.0.11/etc/redis_6381.conf
        /server/tool/redis-7.0.11/bin/redis-server /server/tool/redis-7.0.11/etc/redis_6382.conf

        # 创建 Redis 集群
        echo "Redis集群启动"
        echo "yes" | /server/tool/redis-7.0.11/bin/redis-cli --cluster create 0.0.0.0:6380 0.0.0.0:6381 0.0.0.0:6382
        if [ $? -ne 0 ]; then
            # 重新清除和重置节点
            /server/tool/redis-7.0.11/bin/redis-cli -h 0.0.0.0 -p 6380 FLUSHALL
            /server/tool/redis-7.0.11/bin/redis-cli -h 0.0.0.0 -p 6380 CLUSTER RESET
            /server/tool/redis-7.0.11/bin/redis-cli -h 0.0.0.0 -p 6381 FLUSHALL
            /server/tool/redis-7.0.11/bin/redis-cli -h 0.0.0.0 -p 6381 CLUSTER RESET
            /server/tool/redis-7.0.11/bin/redis-cli -h 0.0.0.0 -p 6382 FLUSHALL
            /server/tool/redis-7.0.11/bin/redis-cli -h 0.0.0.0 -p 6382 CLUSTER RESET
            echo "yes" | /server/tool/redis-7.0.11/bin/redis-cli --cluster create 0.0.0.0:6380 0.0.0.0:6381 0.0.0.0:6382
            if [ $? -ne 0 ]; then
                exit 1
            fi
        fi

        echo "Redis集群启动成功"
        exit 0
        ;;
    stop)
        # 关闭节点 1
        /server/tool/redis-7.0.11/bin/redis-cli -h 0.0.0.0 -p 6380 shutdown
        # 关闭节点 2
        /server/tool/redis-7.0.11/bin/redis-cli -h 0.0.0.0 -p 6381 shutdown
        # 关闭节点 3
        /server/tool/redis-7.0.11/bin/redis-cli -h 0.0.0.0 -p 6382 shutdown

        echo "Redis集群停止成功"
        exit 0
        ;;
    *)
        echo "不支持的命令参数，请使用: $0 {start|stop}"
        exit 1
        ;;
esac

		赋予执行权限
			chmod 777 /server/tool/redis-7.0.11/bin/redis-cluster.sh
		编辑自启动文件
			vi /etc/systemd/system/redis-cluster.service
[Unit]
Description=redis-cluster
After=network.target
[Service]
Type=forking
ExecStart=/server/tool/redis-7.0.11/bin/redis-cluster.sh start
ExecStop=/server/tool/redis-7.0.11/bin/redis-cluster.sh stop
Restart=always
RestartSec=3s
PrivateTmp=true
[Install]
WantedBy=multi-user.target

		设置自启动
			systemctl enable redis-cluster